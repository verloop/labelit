"""
Django settings for labelit project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project using BASE_DIR
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

BASE_DIR_PATH = Path(__file__).resolve(strict=True).parent.parent

LABELIT_DIRS = {
    'projects': BASE_DIR_PATH / 'projects',
    'configs': BASE_DIR_PATH / 'config',
    'exports': BASE_DIR_PATH / 'exports',
    'temp': BASE_DIR_PATH / 'tmp',
}
# Create dirs if it doesnt exist
for dir_type in LABELIT_DIRS:
    LABELIT_DIRS[dir_type].mkdir(parents=True, exist_ok=True)

# Labelit background job config
LABELIT_JOB_CONFIG = {
    'project_manager': {
        'interval': 600,
    },
    'exporter': {
        'interval': 2000,
    },
}

# Setup logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    }

# Proxy configs
LSPROXY_CONNECTION_POOL_COUNT = 10
LSPROXY_CONNECTION_PER_POOL = 20

# Remote storage configs
LABELIT_REMOTE_STORAGE_DOWNLOAD_CONFIG = {
    's3': {
        'region': None,
    },
    'gs': {
        'project': None,
    },
}

LABELIT_REMOTE_STORAGE_UPLOAD_CONFIG = {
    's3': {
        'region': None,
    },
    'gs': {
        'project': None,
    },
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# You need to generate secret key and set it as environment variable
# Secret key can be generated either using https://gist.github.com/ndarville/3452907
# or https://djecrety.ir/
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Login URL for the website
LOGIN_URL='/admin/login/'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'revproxy',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mainapp',
    'crispy_forms',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'labelit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'labelit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

from label_studio.utils.io import find_dir
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, "flaskapp/static"),
    os.path.join(BASE_DIR, "mainapp/static"),
    find_dir('static'),
]

LOGIN_REDIRECT_URL = '/projects/list'
LOGOUT_REDIRECT_URL = '/login'
LOGIN_URL = '/login'

AUTH_USER_MODEL = 'mainapp.User'
